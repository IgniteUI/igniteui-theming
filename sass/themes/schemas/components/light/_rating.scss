@use '../../../../utils/map' as *;
@use '../../../../typography/functions' as *;

////
/// @package theming
/// @group schemas
/// @access public
////

/* stylelint-disable max-line-length */

/// @prop {Map} label-color [color: ('gray', 900)] - sets the color for the label.
/// @prop {Map} value-label [color: ('gray', 700)] - sets the color for the value label.
/// @prop {Number} symbol-size [rem(36px)] - the size of the symbols.
/// @prop {Map} symbol-empty-color [color: ('gray', 900)] - sets the idle color for the symbol when it is a plane text.
/// @prop {Map} symbol-full-color [color: ('primary')] - sets the color in selected state for the symbol when it is a plane text.
/// @prop {Function} symbol-empty-filter [grayscale(100%) opacity(50%)] - the filter(s) used for the empty symbol.
/// @prop {Function} symbol-full-filter [grayscale(50%)] - the filter(s) used for the filled symbol.
/// @prop {Map} disabled-label-color [color: ('gray', 400)] - sets the color for the label in disabled state.
/// @prop {Map} disabled-empty-symbol-color [color: ('gray', 400)] - sets the idle color for the symbol in disabled state when it is a plane text.
/// @prop {Map} disabled-full-symbol-color [color: ('gray', 600)] - sets the color for the symbol in selected/disabled state when it is a plane text.
/// @prop {Number} default-size [2] - The default size used for the rating component.
/// Generates a light rating schema.
/// @type {Map}
$light-rating: (
    symbol-size: null,

    label-color: (
        color: (
            'gray',
            900,
        ),
    ),
    value-label: (
        color: (
            'gray',
            700,
        ),
    ),
    symbol-empty-color: (
        color: (
            'gray',
            600,
        ),
    ),
    symbol-full-color: (
        color: (
            'warn',
        ),
    ),
    symbol-empty-filter: (
        grayscale(100%) opacity(50%),
    ),
    symbol-full-filter: (
        grayscale(50%),
    ),
    disabled-label-color: (
        color: (
            'gray',
            400,
        ),
    ),
    disabled-value-label: (
        color: (
            'gray',
            400,
        ),
    ),
    disabled-empty-symbol-color: (
        color: (
            'gray',
            400,
        ),
    ),
    disabled-full-symbol-color: (
        color: (
            'warn',
            200,
        ),
    ),
    default-size: 2,
);

/// Generates a fluent rating schema.
/// @type {Map}
/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.
/// @prop {Map} disabled-idle-symbols-color [color: ('gray', 200)] - sets the idle color for the symbol in disabled state when it is a plane text.
/// @prop {Map} symbol-empty-color [color: ('gray', 700)] - sets the idle color for the symbol when it is a plane text.
/// @prop {Map} symbol-full-color [[color: ('warn', 900)] - sets the color in selected state for the symbol when it is a plane text.
/// @prop {Map} disabled-empty-symbol-color [color: ('warn', 100)] - sets the idle color for the symbol in disabled state when it is a plane text.
/// @prop {Map} disabled-full-symbol-color [color: ('warn', 100)] - sets the color for the symbol in selected/disabled state when it is a plane text.
/// @requires {Map} $light-rating
$fluent-rating: extend(
    $light-rating,
    (
        value-label: (
            color: (
                'gray',
                900,
            ),
        ),
        symbol-empty-color: (
            color: (
                'gray',
                700,
            ),
        ),
        symbol-full-color: (
            color: (
                'warn',
                900,
            ),
        ),
        disabled-value-label: (
            color: (
                'gray',
                400,
            ),
        ),
        disabled-empty-symbol-color: (
            color: (
                'warn',
                100,
            ),
        ),
        disabled-full-symbol-color: (
            color: (
                'warn',
                100,
            ),
        ),
    )
);

/// Generates a bootstrap rating schema.
/// @type {Map}
/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.
/// @requires {Map} $light-rating
$bootstrap-rating: extend(
    $light-rating,
    (
        value-label: (
            color: (
                'gray',
                900,
            ),
        ),
    )
);

/// Generates an indigo rating schema.
/// @type {Map}
/// @prop {Map} value-label [color: ('gray', 900)] - sets the color for the value label.
/// @requires {Map} $light-rating
$indigo-rating: extend(
    $light-rating,
    (
        value-label: (
            color: (
                'gray',
                900,
            ),
        ),
    )
);
